basePath: /api
definitions:
  cart.CartItem:
    properties:
      build_time:
        type: string
      count:
        type: integer
      creation_time:
        type: string
      description:
        type: string
      disability:
        type: boolean
      id:
        type: integer
      image_url:
        $ref: '#/definitions/sql.NullString'
      name:
        type: string
      price:
        type: integer
      remain:
        type: integer
      tags:
        items:
          type: integer
        type: array
      vendor_id:
        type: integer
    required:
    - description
    - disability
    - name
    - price
    - remain
    - vendor_id
    type: object
  favorite.FavoriteProduct:
    properties:
      description:
        type: string
      disability:
        type: boolean
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      price:
        type: integer
      remain:
        type: integer
    type: object
  member.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  member.MemberInfo:
    properties:
      address:
        $ref: '#/definitions/sql.NullString'
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      payment_id:
        $ref: '#/definitions/sql.NullInt64'
      phone_num:
        $ref: '#/definitions/sql.NullString'
      shipment_id:
        $ref: '#/definitions/sql.NullInt64'
      username:
        type: string
    type: object
  member.RegistrationRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  order.CreationRequest:
    properties:
      address:
        type: string
      description:
        type: string
      name:
        type: string
      payment_method:
        type: integer
      phone_num:
        type: string
      shipment_method:
        type: integer
      state:
        type: string
    type: object
  order.Order:
    properties:
      address:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      payment_method:
        type: integer
      phone_num:
        type: string
      products:
        items:
          $ref: '#/definitions/order.Product'
        type: array
      shipment_method:
        type: integer
      state:
        type: string
    type: object
  order.Product:
    properties:
      build_time:
        type: string
      count:
        type: integer
      description:
        type: string
      image_url:
        $ref: '#/definitions/sql.NullString'
      name:
        type: string
      price:
        type: integer
      vendor_name:
        type: string
    required:
    - description
    - name
    - price
    - vendor_name
    type: object
  product.CreationRequest:
    properties:
      description:
        type: string
      disability:
        type: boolean
      image_url:
        $ref: '#/definitions/sql.NullString'
      name:
        type: string
      price:
        type: integer
      remain:
        type: integer
      tags:
        items:
          type: integer
        type: array
    required:
    - description
    - disability
    - name
    - price
    - remain
    - tags
    type: object
  product.Product:
    properties:
      build_time:
        type: string
      description:
        type: string
      disability:
        type: boolean
      id:
        type: integer
      image_url:
        $ref: '#/definitions/sql.NullString'
      name:
        type: string
      price:
        type: integer
      remain:
        type: integer
      tags:
        items:
          type: integer
        type: array
      vendor_id:
        type: integer
    required:
    - description
    - disability
    - name
    - price
    - remain
    - vendor_id
    type: object
  product.UpdateRequest:
    properties:
      description:
        type: string
      disability:
        type: boolean
      id:
        type: integer
      image_url:
        $ref: '#/definitions/sql.NullString'
      name:
        type: string
      price:
        type: integer
      remain:
        type: integer
      tags:
        items:
          type: integer
        type: array
    required:
    - description
    - disability
    - id
    - name
    - price
    - remain
    - tags
    type: object
  sql.NullInt64:
    properties:
      int64:
        type: integer
      valid:
        description: Valid is true if Int64 is not NULL
        type: boolean
    type: object
  sql.NullString:
    properties:
      string:
        type: string
      valid:
        description: Valid is true if String is not NULL
        type: boolean
    type: object
  store.StoreInfo:
    properties:
      store_id:
        type: integer
    type: object
  tag.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
      type:
        description: '0: product, 1: vendor'
        type: integer
    required:
    - name
    - type
    type: object
host: localhost:8080
info:
  contact:
    email: ericncnl3742@gmail.com
    name: API Support
    url: https://github.com/NTUT-Database-System-Course/ACW-Backend/issues
  description: This is an API server for ACW-Backend
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger ACW-Backend API
  version: "1.0"
paths:
  /api/cart/add:
    post:
      consumes:
      - application/json
      description: Add a product to the user's cart
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: Count
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add a product to the user's cart
      tags:
      - cart
  /api/cart/delete:
    delete:
      consumes:
      - application/json
      description: Remove a product from the user's cart
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove a product from the user's cart
      tags:
      - cart
  /api/cart/list:
    get:
      consumes:
      - application/json
      description: List all products in the user's cart
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cart.CartItem'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List cart items
      tags:
      - cart
  /api/cart/update:
    put:
      consumes:
      - application/json
      description: Update the quantity of a product in the user's cart
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      - description: Count
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update the quantity of a product in the user's cart
      tags:
      - cart
  /api/favorite/add:
    post:
      consumes:
      - application/json
      description: Add a product to the user's favorite list
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add favorite
      tags:
      - favorite
  /api/favorite/delete:
    delete:
      consumes:
      - application/json
      description: Remove a product from the user's favorite list
      parameters:
      - description: Product ID
        in: query
        name: product_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete favorite
      tags:
      - favorite
  /api/favorite/list:
    get:
      consumes:
      - application/json
      description: List the user's favorite products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/favorite.FavoriteProduct'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List favorites
      tags:
      - favorite
  /api/member/info:
    get:
      consumes:
      - application/json
      description: Get member info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/member.MemberInfo'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get member info
      tags:
      - member
  /api/member/login:
    post:
      consumes:
      - application/json
      description: Login member
      parameters:
      - description: Login Request
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/member.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login member
      tags:
      - member
  /api/member/register:
    post:
      consumes:
      - application/json
      description: Register member
      parameters:
      - description: Member Registration
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/member.RegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register member
      tags:
      - member
  /api/order/create:
    post:
      consumes:
      - application/json
      description: Create a new order
      parameters:
      - description: Create Order
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/order.CreationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create order
      tags:
      - order
  /api/order/list:
    get:
      consumes:
      - application/json
      description: List all orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/order.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List orders
      tags:
      - order
  /api/product/create:
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Create Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.CreationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create product
      tags:
      - product
  /api/product/list:
    get:
      consumes:
      - application/json
      description: Get all products
      parameters:
      - description: Vendor ID
        in: query
        name: vendor_id
        type: string
      - description: Get random 5 items
        in: query
        name: random
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List products
      tags:
      - product
  /api/product/update:
    put:
      consumes:
      - application/json
      description: Update an existing product
      parameters:
      - description: Update Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update product
      tags:
      - product
  /api/store/info:
    get:
      consumes:
      - application/json
      description: Get store info
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.StoreInfo'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get store info
      tags:
      - store
  /api/tag/list:
    get:
      consumes:
      - application/json
      description: List all tags
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tag.Tag'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all tags
      tags:
      - tag
swagger: "2.0"
